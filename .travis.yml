dist: xenial
language: bash
services:
  - docker
branches:
  only:
    - master
env:
  global:
    - IMAGE_NAME="danielchoi158/portfolio-frontend"
    - SHORT_SHA="$(git log -1 --pretty=%h)"
cache:
  directories:
    - "$HOME/google-cloud-sdk/"
# Install and configure dependencies (gcloud, kubectl)
before_install:
  - if [ ! -d "$HOME/google-cloud-sdk/bin" ]; then rm -rf $HOME/google-cloud-sdk; export CLOUDSDK_CORE_DISABLE_PROMPTS=1; curl https://sdk.cloud.google.com | bash; fi
  - source /home/travis/google-cloud-sdk/path.bash.inc
  - gcloud --quiet version
  - gcloud --quiet components update
  - gcloud --quiet components update kubectl
  - echo $GCLOUD_SERVICE_KEY | base64 --decode -i > ${HOME}/gcloud-service-key.json
  - gcloud auth activate-service-account --key-file ${HOME}/gcloud-service-key.json

jobs:
  include:
    - stage: build and tag image
      script:
        - cd frontend/
        - docker pull "$IMAGE_NAME" || true
        - docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" .
        - docker image ls
    - stage: push image
      script:
        - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
        - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${SHORT_SHA}"
        - docker push "${IMAGE_NAME}:${SHORT_SHA}"
    - stage: deploy image
      script:
        - kubectl rollout restart deployment portfolio-frontend-deployment
        - kubectl get deployments
#before_script:
#  - cd frontend/
#  - docker pull "$IMAGE_NAME" || true
#script:
#  - docker build --pull --cache-from "$IMAGE_NAME" --tag "$IMAGE_NAME" .
#after_script:
#  - docker images
#before_deploy:
#  - docker login -u $REGISTRY_USER -p $REGISTRY_PASSWORD
#  - docker tag "$IMAGE_NAME" "${IMAGE_NAME}:${SHORT_SHA}"
#deploy:
#  provider: script
#  script: docker push "${IMAGE_NAME}:${SHORT_SHA}"
#  on:
#    branch: master
